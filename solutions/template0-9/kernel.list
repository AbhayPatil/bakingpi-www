
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea0008dd 	b	a37c <main>

Disassembly of section .text:

0000a000 <InitialiseFrameBuffer>:
    a000:	e3500a01 	cmp	r0, #4096	; 0x1000
    a004:	93510a01 	cmpls	r1, #4096	; 0x1000
    a008:	93520020 	cmpls	r2, #32
    a00c:	83a00000 	movhi	r0, #0
    a010:	81a0f00e 	movhi	pc, lr
    a014:	e92d4010 	push	{r4, lr}
    a018:	e59f403c 	ldr	r4, [pc, #60]	; a05c <InitialiseFrameBuffer+0x5c>
    a01c:	e5840000 	str	r0, [r4]
    a020:	e5841004 	str	r1, [r4, #4]
    a024:	e5840008 	str	r0, [r4, #8]
    a028:	e584100c 	str	r1, [r4, #12]
    a02c:	e5842014 	str	r2, [r4, #20]
    a030:	e1a00004 	mov	r0, r4
    a034:	e3a01001 	mov	r1, #1
    a038:	eb0000b3 	bl	a30c <MailboxWrite>
    a03c:	e3a00001 	mov	r0, #1
    a040:	eb0000be 	bl	a340 <MailboxRead>
    a044:	e3300000 	teq	r0, #0
    a048:	13a00000 	movne	r0, #0
    a04c:	18bd8010 	popne	{r4, pc}
    a050:	e1a00004 	mov	r0, r4
    a054:	e3c0020f 	bic	r0, r0, #-268435456	; 0xf0000000
    a058:	e8bd8010 	pop	{r4, pc}
    a05c:	40009000 	.word	0x40009000

0000a060 <SetForeColour>:
    a060:	e3500801 	cmp	r0, #65536	; 0x10000
    a064:	81a0f00e 	movhi	pc, lr
    a068:	01a0f00e 	moveq	pc, lr
    a06c:	e59f11b8 	ldr	r1, [pc, #440]	; a22c <stringLoopEnd$+0x4>
    a070:	e1c100b0 	strh	r0, [r1]
    a074:	e1a0f00e 	mov	pc, lr

0000a078 <SetGraphicsAddress>:
    a078:	e59f11b0 	ldr	r1, [pc, #432]	; a230 <stringLoopEnd$+0x8>
    a07c:	e5810000 	str	r0, [r1]
    a080:	e1a0f00e 	mov	pc, lr

0000a084 <DrawPixel>:
    a084:	e59f21a4 	ldr	r2, [pc, #420]	; a230 <stringLoopEnd$+0x8>
    a088:	e5922000 	ldr	r2, [r2]
    a08c:	e5923004 	ldr	r3, [r2, #4]
    a090:	e2433001 	sub	r3, r3, #1
    a094:	e1510003 	cmp	r1, r3
    a098:	81a0f00e 	movhi	pc, lr
    a09c:	e5923000 	ldr	r3, [r2]
    a0a0:	e2433001 	sub	r3, r3, #1
    a0a4:	e1500003 	cmp	r0, r3
    a0a8:	81a0f00e 	movhi	pc, lr
    a0ac:	e5922020 	ldr	r2, [r2, #32]
    a0b0:	e2422103 	sub	r2, r2, #-1073741824	; 0xc0000000
    a0b4:	e2833001 	add	r3, r3, #1
    a0b8:	e0200391 	mla	r0, r1, r3, r0
    a0bc:	e0822080 	add	r2, r2, r0, lsl #1
    a0c0:	e59f3164 	ldr	r3, [pc, #356]	; a22c <stringLoopEnd$+0x4>
    a0c4:	e1d330b0 	ldrh	r3, [r3]
    a0c8:	e1c230b0 	strh	r3, [r2]
    a0cc:	e1a0f00e 	mov	pc, lr

0000a0d0 <DrawLine>:
    a0d0:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    a0d4:	e1a04000 	mov	r4, r0
    a0d8:	e1a05001 	mov	r5, r1
    a0dc:	e1a06002 	mov	r6, r2
    a0e0:	e1a07003 	mov	r7, r3
    a0e4:	e1560004 	cmp	r6, r4
    a0e8:	a0468004 	subge	r8, r6, r4
    a0ec:	a3a0a001 	movge	sl, #1
    a0f0:	b0448006 	sublt	r8, r4, r6
    a0f4:	b3e0a000 	mvnlt	sl, #0
    a0f8:	e1570005 	cmp	r7, r5
    a0fc:	a0459007 	subge	r9, r5, r7
    a100:	a3e0b000 	mvnge	fp, #0
    a104:	b0479005 	sublt	r9, r7, r5
    a108:	b3a0b001 	movlt	fp, #1
    a10c:	e088c009 	add	ip, r8, r9
    a110:	e086600a 	add	r6, r6, sl
    a114:	e087700b 	add	r7, r7, fp

0000a118 <lineLoop$>:
    a118:	e1340006 	teq	r4, r6
    a11c:	11350007 	teqne	r5, r7
    a120:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    a124:	e1a00004 	mov	r0, r4
    a128:	e1a01005 	mov	r1, r5
    a12c:	ebffffd4 	bl	a084 <DrawPixel>
    a130:	e158008c 	cmp	r8, ip, lsl #1
    a134:	a085500b 	addge	r5, r5, fp
    a138:	a08cc008 	addge	ip, ip, r8
    a13c:	e159008c 	cmp	r9, ip, lsl #1
    a140:	d084400a 	addle	r4, r4, sl
    a144:	d08cc009 	addle	ip, ip, r9
    a148:	eafffff2 	b	a118 <lineLoop$>

0000a14c <DrawCharacter>:
    a14c:	e350007f 	cmp	r0, #127	; 0x7f
    a150:	8a000057 	bhi	a2b4 <Debug>
    a154:	81a0f00e 	movhi	pc, lr
    a158:	e1a04001 	mov	r4, r1
    a15c:	e1a05002 	mov	r5, r2
    a160:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    a164:	e59f60c8 	ldr	r6, [pc, #200]	; a234 <stringLoopEnd$+0xc>
    a168:	e0866200 	add	r6, r6, r0, lsl #4

0000a16c <charLoop$>:
    a16c:	e5d67000 	ldrb	r7, [r6]
    a170:	e3a08008 	mov	r8, #8

0000a174 <charPixelLoop$>:
    a174:	e2588001 	subs	r8, r8, #1
    a178:	ba000007 	blt	a19c <charPixelLoopEnd$>
    a17c:	e1a07087 	lsl	r7, r7, #1
    a180:	e3170c01 	tst	r7, #256	; 0x100
    a184:	0afffffa 	beq	a174 <charPixelLoop$>
    a188:	e0840008 	add	r0, r4, r8
    a18c:	e1a01005 	mov	r1, r5
    a190:	ebffffbb 	bl	a084 <DrawPixel>
    a194:	e3380000 	teq	r8, #0
    a198:	1afffff5 	bne	a174 <charPixelLoop$>

0000a19c <charPixelLoopEnd$>:
    a19c:	e2855001 	add	r5, r5, #1
    a1a0:	e2866001 	add	r6, r6, #1
    a1a4:	e316000f 	tst	r6, #15
    a1a8:	1affffef 	bne	a16c <charLoop$>
    a1ac:	e3a00008 	mov	r0, #8
    a1b0:	e3a01010 	mov	r1, #16
    a1b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

0000a1b8 <DrawString>:
    a1b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    a1bc:	e1a07000 	mov	r7, r0
    a1c0:	e1a04002 	mov	r4, r2
    a1c4:	e1a06004 	mov	r6, r4
    a1c8:	e1a05003 	mov	r5, r3
    a1cc:	e1a08001 	mov	r8, r1

0000a1d0 <stringLoop$>:
    a1d0:	e2588001 	subs	r8, r8, #1
    a1d4:	ba000013 	blt	a228 <stringLoopEnd$>
    a1d8:	e5d79000 	ldrb	r9, [r7]
    a1dc:	e2877001 	add	r7, r7, #1
    a1e0:	e1a00009 	mov	r0, r9
    a1e4:	e1a01004 	mov	r1, r4
    a1e8:	e1a02005 	mov	r2, r5
    a1ec:	ebffffd6 	bl	a14c <DrawCharacter>
    a1f0:	e339000a 	teq	r9, #10
    a1f4:	01a04006 	moveq	r4, r6
    a1f8:	00855001 	addeq	r5, r5, r1
    a1fc:	0afffff3 	beq	a1d0 <stringLoop$>
    a200:	e3390009 	teq	r9, #9
    a204:	10844000 	addne	r4, r4, r0
    a208:	1afffff0 	bne	a1d0 <stringLoop$>
    a20c:	e0800100 	add	r0, r0, r0, lsl #2
    a210:	e1a01006 	mov	r1, r6

0000a214 <stringLoopTab$>:
    a214:	e0811000 	add	r1, r1, r0
    a218:	e1540001 	cmp	r4, r1
    a21c:	aafffffc 	bge	a214 <stringLoopTab$>
    a220:	e1a04001 	mov	r4, r1
    a224:	eaffffe9 	b	a1d0 <stringLoop$>

0000a228 <stringLoopEnd$>:
    a228:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    a22c:	00009900 	.word	0x00009900
    a230:	00009904 	.word	0x00009904
    a234:	00009100 	.word	0x00009100

0000a238 <GetGpioAddress>:
    a238:	e59f00b8 	ldr	r0, [pc, #184]	; a2f8 <loop$+0x2c>
    a23c:	e1a0f00e 	mov	pc, lr

0000a240 <SetGpioFunction>:
    a240:	e3500035 	cmp	r0, #53	; 0x35
    a244:	93510007 	cmpls	r1, #7
    a248:	81a0f00e 	movhi	pc, lr
    a24c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a250:	e1a02000 	mov	r2, r0
    a254:	ebfffff7 	bl	a238 <GetGpioAddress>

0000a258 <functionLoop$>:
    a258:	e3520009 	cmp	r2, #9
    a25c:	8242200a 	subhi	r2, r2, #10
    a260:	82800004 	addhi	r0, r0, #4
    a264:	8afffffb 	bhi	a258 <functionLoop$>
    a268:	e0822082 	add	r2, r2, r2, lsl #1
    a26c:	e1a01211 	lsl	r1, r1, r2
    a270:	e5801000 	str	r1, [r0]
    a274:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a278 <SetGpio>:
    a278:	e3500035 	cmp	r0, #53	; 0x35
    a27c:	81a0f00e 	movhi	pc, lr
    a280:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a284:	e1a02000 	mov	r2, r0
    a288:	ebffffea 	bl	a238 <GetGpioAddress>
    a28c:	e1a032a2 	lsr	r3, r2, #5
    a290:	e1a03103 	lsl	r3, r3, #2
    a294:	e0800003 	add	r0, r0, r3
    a298:	e202201f 	and	r2, r2, #31
    a29c:	e3a03001 	mov	r3, #1
    a2a0:	e1a03213 	lsl	r3, r3, r2
    a2a4:	e3310000 	teq	r1, #0
    a2a8:	05803028 	streq	r3, [r0, #40]	; 0x28
    a2ac:	1580301c 	strne	r3, [r0, #28]
    a2b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a2b4 <Debug>:
    a2b4:	e3a0002f 	mov	r0, #47	; 0x2f
    a2b8:	e3a01001 	mov	r1, #1
    a2bc:	ebffffdf 	bl	a240 <SetGpioFunction>
    a2c0:	e59f4034 	ldr	r4, [pc, #52]	; a2fc <loop$+0x30>
    a2c4:	e5944000 	ldr	r4, [r4]
    a2c8:	e3a05000 	mov	r5, #0

0000a2cc <loop$>:
    a2cc:	e3a01001 	mov	r1, #1
    a2d0:	e1a01511 	lsl	r1, r1, r5
    a2d4:	e0011004 	and	r1, r1, r4
    a2d8:	e3a0002f 	mov	r0, #47	; 0x2f
    a2dc:	ebffffe5 	bl	a278 <SetGpio>
    a2e0:	e59f0018 	ldr	r0, [pc, #24]	; a300 <loop$+0x34>
    a2e4:	eb000069 	bl	a490 <Wait>
    a2e8:	e2855001 	add	r5, r5, #1
    a2ec:	e3550020 	cmp	r5, #32
    a2f0:	03a05000 	moveq	r5, #0
    a2f4:	eafffff4 	b	a2cc <loop$>
    a2f8:	3f200000 	.word	0x3f200000
    a2fc:	00009a00 	.word	0x00009a00
    a300:	0003d090 	.word	0x0003d090

0000a304 <GetMailboxBase>:
    a304:	e59f006c 	ldr	r0, [pc, #108]	; a378 <rightmail$+0x24>
    a308:	e1a0f00e 	mov	pc, lr

0000a30c <MailboxWrite>:
    a30c:	e310000f 	tst	r0, #15
    a310:	11a0f00e 	movne	pc, lr
    a314:	e351000f 	cmp	r1, #15
    a318:	81a0f00e 	movhi	pc, lr
    a31c:	e1a02000 	mov	r2, r0
    a320:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a324:	ebfffff6 	bl	a304 <GetMailboxBase>

0000a328 <wait1$>:
    a328:	e5903018 	ldr	r3, [r0, #24]
    a32c:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    a330:	1afffffc 	bne	a328 <wait1$>
    a334:	e0822001 	add	r2, r2, r1
    a338:	e5802020 	str	r2, [r0, #32]
    a33c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a340 <MailboxRead>:
    a340:	e350000f 	cmp	r0, #15
    a344:	81a0f00e 	movhi	pc, lr
    a348:	e1a01000 	mov	r1, r0
    a34c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a350:	ebffffeb 	bl	a304 <GetMailboxBase>

0000a354 <rightmail$>:
    a354:	e5902018 	ldr	r2, [r0, #24]
    a358:	e3120101 	tst	r2, #1073741824	; 0x40000000
    a35c:	1afffffc 	bne	a354 <rightmail$>
    a360:	e5902000 	ldr	r2, [r0]
    a364:	e202300f 	and	r3, r2, #15
    a368:	e1330001 	teq	r3, r1
    a36c:	1afffff8 	bne	a354 <rightmail$>
    a370:	e3c2000f 	bic	r0, r2, #15
    a374:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    a378:	3f00b880 	.word	0x3f00b880

0000a37c <main>:
    a37c:	e3a0da09 	mov	sp, #36864	; 0x9000
    a380:	e3a00b01 	mov	r0, #1024	; 0x400
    a384:	e3a01c03 	mov	r1, #768	; 0x300
    a388:	e3a02010 	mov	r2, #16
    a38c:	ebffff1b 	bl	a000 <InitialiseFrameBuffer>
    a390:	e3300000 	teq	r0, #0
    a394:	1a000006 	bne	a3b4 <noError$>
    a398:	e3a0002f 	mov	r0, #47	; 0x2f
    a39c:	e3a01001 	mov	r1, #1
    a3a0:	ebffffa6 	bl	a240 <SetGpioFunction>
    a3a4:	e3a0002f 	mov	r0, #47	; 0x2f
    a3a8:	e3a01001 	mov	r1, #1
    a3ac:	ebffffb1 	bl	a278 <SetGpio>

0000a3b0 <error$>:
    a3b0:	eafffffe 	b	a3b0 <error$>

0000a3b4 <noError$>:
    a3b4:	e1a04000 	mov	r4, r0
    a3b8:	ebffff2e 	bl	a078 <SetGraphicsAddress>
    a3bc:	e3a04000 	mov	r4, #0

0000a3c0 <loop$>:
    a3c0:	e59f0060 	ldr	r0, [pc, #96]	; a428 <loop$+0x68>
    a3c4:	e3a01015 	mov	r1, #21
    a3c8:	e59f205c 	ldr	r2, [pc, #92]	; a42c <loop$+0x6c>
    a3cc:	e1a03224 	lsr	r3, r4, #4
    a3d0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    a3d4:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    a3d8:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    a3dc:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    a3e0:	eb00007b 	bl	a5d4 <FormatString>
    a3e4:	e28dd010 	add	sp, sp, #16
    a3e8:	e1a01000 	mov	r1, r0
    a3ec:	e59f0038 	ldr	r0, [pc, #56]	; a42c <loop$+0x6c>
    a3f0:	e3a02000 	mov	r2, #0
    a3f4:	e1a03004 	mov	r3, r4
    a3f8:	e3530e2f 	cmp	r3, #752	; 0x2f0
    a3fc:	82433c03 	subhi	r3, r3, #768	; 0x300
    a400:	82822c01 	addhi	r2, r2, #256	; 0x100
    a404:	e3530e2f 	cmp	r3, #752	; 0x2f0
    a408:	82433c03 	subhi	r3, r3, #768	; 0x300
    a40c:	82822c01 	addhi	r2, r2, #256	; 0x100
    a410:	e3530e2f 	cmp	r3, #752	; 0x2f0
    a414:	82433c03 	subhi	r3, r3, #768	; 0x300
    a418:	82822c01 	addhi	r2, r2, #256	; 0x100
    a41c:	ebffff65 	bl	a1b8 <DrawString>
    a420:	e2844010 	add	r4, r4, #16
    a424:	eaffffe5 	b	a3c0 <loop$>
    a428:	00009a04 	.word	0x00009a04
    a42c:	00009a19 	.word	0x00009a19

0000a430 <DivideU32>:
    a430:	e16f2f11 	clz	r2, r1
    a434:	e16f3f10 	clz	r3, r0
    a438:	e0522003 	subs	r2, r2, r3
    a43c:	e1a03211 	lsl	r3, r1, r2
    a440:	e1a01000 	mov	r1, r0
    a444:	e3a00000 	mov	r0, #0
    a448:	ba000009 	blt	a474 <divideU32Return$>

0000a44c <divideU32Loop$>:
    a44c:	e1510003 	cmp	r1, r3
    a450:	ba000003 	blt	a464 <divideU32LoopContinue$>
    a454:	e2800001 	add	r0, r0, #1
    a458:	e0511003 	subs	r1, r1, r3
    a45c:	01a00210 	lsleq	r0, r0, r2
    a460:	0a000003 	beq	a474 <divideU32Return$>

0000a464 <divideU32LoopContinue$>:
    a464:	e2522001 	subs	r2, r2, #1
    a468:	a1a030a3 	lsrge	r3, r3, #1
    a46c:	a1a00080 	lslge	r0, r0, #1
    a470:	aafffff5 	bge	a44c <divideU32Loop$>

0000a474 <divideU32Return$>:
    a474:	e1a0f00e 	mov	pc, lr

0000a478 <GetSystemTimerAddress>:
    a478:	e59f0034 	ldr	r0, [pc, #52]	; a4b4 <loop$+0x14>
    a47c:	e1a0f00e 	mov	pc, lr

0000a480 <GetTimestamp>:
    a480:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a484:	ebfffffb 	bl	a478 <GetSystemTimerAddress>
    a488:	e1c000d4 	ldrd	r0, [r0, #4]
    a48c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a490 <Wait>:
    a490:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a494:	e1a02000 	mov	r2, r0
    a498:	ebfffff8 	bl	a480 <GetTimestamp>
    a49c:	e1a03000 	mov	r3, r0

0000a4a0 <loop$>:
    a4a0:	ebfffff6 	bl	a480 <GetTimestamp>
    a4a4:	e0401003 	sub	r1, r0, r3
    a4a8:	e1510002 	cmp	r1, r2
    a4ac:	9afffffb 	bls	a4a0 <loop$>
    a4b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    a4b4:	3f003000 	.word	0x3f003000

0000a4b8 <FindTag>:
    a4b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a4bc:	e2400001 	sub	r0, r0, #1
    a4c0:	e3500008 	cmp	r0, #8
    a4c4:	83a00000 	movhi	r0, #0
    a4c8:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
    a4cc:	e59f1054 	ldr	r1, [pc, #84]	; a528 <tagLoop$+0x2c>

0000a4d0 <tagReturn$>:
    a4d0:	e0812100 	add	r2, r1, r0, lsl #2
    a4d4:	e5922000 	ldr	r2, [r2]
    a4d8:	e3320000 	teq	r2, #0
    a4dc:	11a00002 	movne	r0, r2
    a4e0:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
    a4e4:	e5912000 	ldr	r2, [r1]
    a4e8:	e3320000 	teq	r2, #0
    a4ec:	13a00000 	movne	r0, #0
    a4f0:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
    a4f4:	e3a02c01 	mov	r2, #256	; 0x100
    a4f8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)

0000a4fc <tagLoop$>:
    a4fc:	e1d230b4 	ldrh	r3, [r2, #4]
    a500:	e2533001 	subs	r3, r3, #1
    a504:	b49d4004 	poplt	{r4}		; (ldrlt r4, [sp], #4)
    a508:	bafffff0 	blt	a4d0 <tagReturn$>
    a50c:	e0813103 	add	r3, r1, r3, lsl #2
    a510:	e5934000 	ldr	r4, [r3]
    a514:	e3340000 	teq	r4, #0
    a518:	05832000 	streq	r2, [r3]
    a51c:	e5923000 	ldr	r3, [r2]
    a520:	e0822103 	add	r2, r2, r3, lsl #2
    a524:	eafffff4 	b	a4fc <tagLoop$>
    a528:	00009a19 	.word	0x00009a19

0000a52c <ReverseString>:
    a52c:	e0811000 	add	r1, r1, r0
    a530:	e2411001 	sub	r1, r1, #1

0000a534 <revLoop$>:
    a534:	e1510000 	cmp	r1, r0
    a538:	91a0f00e 	movls	pc, lr
    a53c:	e5d02000 	ldrb	r2, [r0]
    a540:	e5d13000 	ldrb	r3, [r1]
    a544:	e5c03000 	strb	r3, [r0]
    a548:	e5c12000 	strb	r2, [r1]
    a54c:	e2800001 	add	r0, r0, #1
    a550:	e2411001 	sub	r1, r1, #1
    a554:	eafffff6 	b	a534 <revLoop$>

0000a558 <UnsignedString>:
    a558:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    a55c:	e1a05001 	mov	r5, r1
    a560:	e1a06002 	mov	r6, r2
    a564:	e3a07000 	mov	r7, #0

0000a568 <charLoop$>:
    a568:	e1a01006 	mov	r1, r6
    a56c:	ebffffaf 	bl	a430 <DivideU32>
    a570:	e3510009 	cmp	r1, #9
    a574:	92811030 	addls	r1, r1, #48	; 0x30
    a578:	82811057 	addhi	r1, r1, #87	; 0x57
    a57c:	e3350000 	teq	r5, #0
    a580:	17c51007 	strbne	r1, [r5, r7]
    a584:	e2877001 	add	r7, r7, #1
    a588:	e3300000 	teq	r0, #0
    a58c:	1afffff5 	bne	a568 <charLoop$>
    a590:	e3350000 	teq	r5, #0
    a594:	11a00005 	movne	r0, r5
    a598:	11a01007 	movne	r1, r7
    a59c:	1bffffe2 	blne	a52c <ReverseString>
    a5a0:	e1a00007 	mov	r0, r7
    a5a4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000a5a8 <SignedString>:
    a5a8:	e3500000 	cmp	r0, #0
    a5ac:	aaffffe9 	bge	a558 <UnsignedString>
    a5b0:	e2600000 	rsb	r0, r0, #0
    a5b4:	e3310000 	teq	r1, #0
    a5b8:	13a0302d 	movne	r3, #45	; 0x2d
    a5bc:	15c13000 	strbne	r3, [r1]
    a5c0:	12811001 	addne	r1, r1, #1
    a5c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a5c8:	ebffffe2 	bl	a558 <UnsignedString>
    a5cc:	e2800001 	add	r0, r0, #1
    a5d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a5d4 <FormatString>:
    a5d4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    a5d8:	e1a04000 	mov	r4, r0
    a5dc:	e1a05001 	mov	r5, r1
    a5e0:	e1a06002 	mov	r6, r2
    a5e4:	e1a07003 	mov	r7, r3
    a5e8:	e28d801c 	add	r8, sp, #28
    a5ec:	e3a09000 	mov	r9, #0

0000a5f0 <formatLoop$>:
    a5f0:	e2555001 	subs	r5, r5, #1
    a5f4:	b1a00009 	movlt	r0, r9
    a5f8:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    a5fc:	e5d40000 	ldrb	r0, [r4]
    a600:	e2844001 	add	r4, r4, #1
    a604:	e3300025 	teq	r0, #37	; 0x25
    a608:	0a000004 	beq	a620 <formatArg$>

0000a60c <formatChar$>:
    a60c:	e3360000 	teq	r6, #0
    a610:	15c60000 	strbne	r0, [r6]
    a614:	12866001 	addne	r6, r6, #1
    a618:	e2899001 	add	r9, r9, #1
    a61c:	eafffff3 	b	a5f0 <formatLoop$>

0000a620 <formatArg$>:
    a620:	e2555001 	subs	r5, r5, #1
    a624:	b1a00009 	movlt	r0, r9
    a628:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    a62c:	e5d40000 	ldrb	r0, [r4]
    a630:	e2844001 	add	r4, r4, #1
    a634:	e3300025 	teq	r0, #37	; 0x25
    a638:	0afffff3 	beq	a60c <formatChar$>
    a63c:	e3300063 	teq	r0, #99	; 0x63
    a640:	01a00007 	moveq	r0, r7
    a644:	05987000 	ldreq	r7, [r8]
    a648:	02888004 	addeq	r8, r8, #4
    a64c:	0affffee 	beq	a60c <formatChar$>
    a650:	e3300073 	teq	r0, #115	; 0x73
    a654:	0a000007 	beq	a678 <formatString$>
    a658:	e3300064 	teq	r0, #100	; 0x64
    a65c:	0a000010 	beq	a6a4 <formatSigned$>
    a660:	e3300075 	teq	r0, #117	; 0x75
    a664:	13300078 	teqne	r0, #120	; 0x78
    a668:	13300062 	teqne	r0, #98	; 0x62
    a66c:	1330006f 	teqne	r0, #111	; 0x6f
    a670:	0a000015 	beq	a6cc <formatUnsigned$>
    a674:	eaffffdd 	b	a5f0 <formatLoop$>

0000a678 <formatString$>:
    a678:	e5d70000 	ldrb	r0, [r7]
    a67c:	e3300030 	teq	r0, #48	; 0x30
    a680:	05987000 	ldreq	r7, [r8]
    a684:	02888004 	addeq	r8, r8, #4
    a688:	0affffd8 	beq	a5f0 <formatLoop$>
    a68c:	e2899001 	add	r9, r9, #1
    a690:	e3360000 	teq	r6, #0
    a694:	15c60000 	strbne	r0, [r6]
    a698:	12866001 	addne	r6, r6, #1
    a69c:	e2877001 	add	r7, r7, #1
    a6a0:	eafffff4 	b	a678 <formatString$>

0000a6a4 <formatSigned$>:
    a6a4:	e1a00007 	mov	r0, r7
    a6a8:	e5987000 	ldr	r7, [r8]
    a6ac:	e2888004 	add	r8, r8, #4
    a6b0:	e1a01006 	mov	r1, r6
    a6b4:	e3a0200a 	mov	r2, #10
    a6b8:	ebffffba 	bl	a5a8 <SignedString>
    a6bc:	e3360000 	teq	r6, #0
    a6c0:	10866000 	addne	r6, r6, r0
    a6c4:	e0899000 	add	r9, r9, r0
    a6c8:	eaffffc8 	b	a5f0 <formatLoop$>

0000a6cc <formatUnsigned$>:
    a6cc:	e3300075 	teq	r0, #117	; 0x75
    a6d0:	03a0200a 	moveq	r2, #10
    a6d4:	e3300078 	teq	r0, #120	; 0x78
    a6d8:	03a02010 	moveq	r2, #16
    a6dc:	e3300062 	teq	r0, #98	; 0x62
    a6e0:	03a02002 	moveq	r2, #2
    a6e4:	e330006f 	teq	r0, #111	; 0x6f
    a6e8:	03a02008 	moveq	r2, #8
    a6ec:	e1a00007 	mov	r0, r7
    a6f0:	e5987000 	ldr	r7, [r8]
    a6f4:	e2888004 	add	r8, r8, #4
    a6f8:	e1a01006 	mov	r1, r6
    a6fc:	ebffff95 	bl	a558 <UnsignedString>
    a700:	e3360000 	teq	r6, #0
    a704:	10866000 	addne	r6, r6, r0
    a708:	e0899000 	add	r9, r9, r0
    a70c:	eaffffb7 	b	a5f0 <formatLoop$>
