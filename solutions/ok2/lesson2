Lesson 2 OK2

Lesson two builds off of lesson one by introducing a new concept of waiting.  In the previous lab we added a loop to the end of the code to give the processor something to do.  This lab takes it a step further by using these empty cycles to flash an LED.  We already discovered how to turn on an LED by setting the 47th bit of GPSET by setting the 15th bit of the GPSET1 register.  In this case we load register 2 with a large value and subtract from it in a loop.  The loop continues as long as register 2 is not zero.  Upon reaching zero we turn off the LED by setting the 47th bit of the GPCLR, found in GPCLR1 bit 15.  We do the same process again to wait and turn on the LED.  This loops infinitely. The source code can be found below:

@ Initialization
.section .init
.globl _start
_start:
@ Credit to user nburman of Raspberry Pi forums who found
@ the new base address and GPIO pin for the ACT LED of the
@ Raspberry Pi 2.

@ Load the address of the GPIO controller
ldr r0,=0x3f200000
@ enable the 47th GPIO pin
mov r1,#1
lsl r1,#21
str r1,[r0,#16]
@ Turn on the LED by setting the GPSET1 register
@ With the 15th bit set 47-32=15
mov r1,#1
lsl r1,#15
str r1,[r0,#32]
@ Give processor a flash LED task
loop$:
@ Set the countdown timer
mov r2,#0x3F0000
@ Start counting down
wait1$:
sub r2,#1
cmp r2,#0
bne wait1$
@ When timer expires turn off the LED by setting GPCLR1 register
str r1,[r0,#44]
@ Reset the countdown timer
mov r2,#0x3F0000
wait2$:
sub r2,#1
cmp r2,#0
bne wait2$
@ When timer expires turn on the LED by setting the GPSET1 register
str r1,[r0,#32]
b loop$

